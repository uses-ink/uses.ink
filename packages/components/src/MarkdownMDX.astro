---
import { runMDX } from "@uses.ink/client";
import { forgeUrlResolvers, resolveMeta } from "@uses.ink/server";
import type { MDXCompileResult } from "@uses.ink/types";
import { mdxComponents } from "./mdx";
import { MarkdownHeader } from "./MarkdownHeader";
const { meta, runnable, readingTime }: MDXCompileResult = Astro.props.result;
const { commit, request } = Astro.props;
const headingMeta = resolveMeta(meta, request, commit);
const Content = await runMDX(runnable);
const urlResolvers = forgeUrlResolvers(request)
---

<>
    <title slot="head">{headingMeta.title}</title>
    <meta slot="head" name="description" content={headingMeta.description} />
    <meta slot="head" name="og:title" content={headingMeta.title} />
    <meta slot="head" name="og:description" content={headingMeta.description} />
    {meta.image ? (
        <meta
            slot="head"
            property="og:image"
            content={urlResolvers.asset(meta.image)}
        />
    ) : headingMeta.author.avatar ? (
        <meta slot="head" property="og:image" content={headingMeta.author.avatar} />
    ) : null}

    <MarkdownHeader {...{ headingMeta, meta, readingTime }} client:load />
    
    <Content components={mdxComponents} />
</h>

<script src="./lib/pre-utils.ts" />
<script is:inline define:vars={{ meta }}>
    const PROSE_THEMES = {
        default: "prose-neutral",
        gruvbox: "prose-gruvbox",
        solarized: "prose-solarized",
        nord: "prose-nord",
        monokai: "prose-monokai",
        dracula: "prose-dracula",
    };
    const theme = meta.theme || "default";
    document.documentElement.dataset.theme = theme;
    const rootArticle = document.getElementById("root-article");
    rootArticle.classList.remove(...Object.values(PROSE_THEMES));
    rootArticle.classList.add(PROSE_THEMES[theme] || PROSE_THEMES.default);

    const FONTS = {
        sans: "font-sans",
        serif: "font-serif",
        mono: "font-mono",
    };

    const font = meta.font || "sans";
    rootArticle.classList.remove(...Object.values(FONTS));
    rootArticle.classList.add(FONTS[font] || FONTS.sans);
</script>